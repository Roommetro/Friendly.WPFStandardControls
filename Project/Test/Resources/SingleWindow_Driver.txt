using Codeer.Friendly.Dynamic;
using Codeer.Friendly;
using Codeer.Friendly.Windows;
using Codeer.Friendly.Windows.Grasp;
using Codeer.TestAssistant.GeneratorToolKit;
using RM.Friendly.WPFStandardControls;

namespace TestCode
{
    [WindowDriver(TypeFullName = "Target.CreateDriverTarget.SingleWindow")]
    public class SingleWindow_Driver
    {
        public WindowControl Core { get; }
        public WPFToggleButton ToggleButton => Core.VisualTree().ByType("System.Windows.Controls.Primitives.ToggleButton").ByBinding("IsOverflowOpen").Single().Dynamic();
        public WPFMenuBase Menu1 => Core.Dynamic().Menu1;
        public WPFButtonBase Button2 => Core.Dynamic().Button2;
        public WPFToggleButton ToggleButton1 => Core.Dynamic().ToggleButton1;
        public WPFButtonBase Button1 => Core.Dynamic().Button1;
        public WPFToggleButton CheckBox1 => Core.Dynamic().CheckBox1;
        public WPFToggleButton RadioButton1 => Core.Dynamic().RadioButton1;
        public WPFToggleButton RadioButton2 => Core.Dynamic().RadioButton2;
        public WPFComboBox ComboBox1 => Core.Dynamic().ComboBox1;
        public WPFComboBox ComboBox2 => Core.Dynamic().ComboBox2;
        public WPFListBox ListBox1 => Core.Dynamic().ListBox1;
        public WPFListView ListView1 => Core.Dynamic().ListView1;
        public WPFTreeView TreeView1 => Core.Dynamic().TreeView1;
        public WPFExpander Expander1 => Core.Dynamic().Expander1;
        public WPFComboBox _comboInExpander => Core.Dynamic()._comboInExpander;
        public WPFPasswordBox PasswordBox1 => Core.Dynamic().PasswordBox1;
        public WPFProgressBar ProgressBar1 => Core.Dynamic().ProgressBar1;
        public WPFRichTextBox RichTextBox1 => Core.Dynamic().RichTextBox1;
        public WPFSlider Slider1 => Core.Dynamic().Slider1;
        public WPFTextBox TextBox1 => Core.Dynamic().TextBox1;
        public WPFDatePicker DatePicker1 => Core.Dynamic().DatePicker1;
        public WPFDataGrid DataGrid1 => Core.Dynamic().DataGrid1;
        public WPFTabControl TabControl1 => Core.Dynamic().TabControl1;
        public WPFCalendar Calendar1 => Core.Dynamic().Calendar1;

        public SingleWindow_Driver(WindowControl core)
        {
            Core = core;
        }

        public SingleWindow_Driver(AppVar core)
        {
            Core = new WindowControl(core);
        }
    }

    public static class SingleWindow_Driver_Extensions
    {
        [WindowDriverIdentify(TypeFullName = "Target.CreateDriverTarget.SingleWindow")]
        public static SingleWindow_Driver Attach_SingleWindow(this WindowsAppFriend app)
            => new SingleWindow_Driver(app.WaitForIdentifyFromTypeFullName("Target.CreateDriverTarget.SingleWindow"));
    }
}